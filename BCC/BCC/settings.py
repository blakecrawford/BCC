"""
Django settings for BCC project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(4wu@bmhillyblg+2%i&%tk@zou_q85aw85b-328l@tfuwlng%'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'suit',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    #'simple_history',
    'rest_framework',
    'refdata',
    'core',
    'epd',
    'omf',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    #'simple_history.middleware.HistoryRequestMiddleware',
)

ROOT_URLCONF = 'BCC.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'BCC.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'bcc4',
        'USER': 'root',
        'PASSWORD': 'root',
        'HOST': 'localhost',
        'PORT': '3306'
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

SUIT_CONFIG = {
    'ADMIN_NAME': 'GSC-BCC',
    'HEADER_DATE_FORMAT': 'l, j. F Y',
    'HEADER_TIME_FORMAT': 'H:i',
    'SHOW_REQUIRED_ASTERISK': True,
    'CONFIRM_UNSAVED_CHANGES': True,
    'MENU': (
        'sites',
        {'label': 'Endpoint Profiles', 'icon': 'icon-screenshot', 'models': ('epd.deliverycontext',
                                                                      'epd.endpoint',
                                                                      'epd.platform',
                                                                       'epd.entitytype',
                                                                      'epd.technicalvideorequirements',
                                                                      'epd.staticimagerequirements',
                                                                      'epd.metadataschema',
                                                                      'epd.packagestructure',
                                                                      'epd.deliveryprocess',)},
        {'label': 'EPD Reference Data', 'icon': 'icon-screenshot', 'models': ('epd.codec',
                                                                      'epd.specification',
                                                                      'epd.scantype',
                                                                              'epd.imagetype',)},
        '-',
        {'label': 'Orders', 'icon': 'icon-briefcase', 'models': ('omf.order',
                                                            'omf.orderlineitem',
                                                            'omf.orderstatus',
                                                            'omf.promise',
                                                            'omf.deliverable',
                                                            'omf.delivery',
                                                            'omf.orderpredecessor',
                                                            'omf.orderpredecessortype')},
        '-',
        {'label': 'Containers', 'icon': 'icon-book', 'models': ('core.franchise',
                                                                'core.series',
                                                                'core.season',)},
        {'label': 'Items', 'icon': 'icon-file', 'models': ('core.episode',
                                                           'core.movie',
                                                           'core.special',
                                                           'core.module',
                                                           'core.clip',)},
        '-',
        {'label': 'Versions', 'icon': 'icon-tag', 'models': ('core.version',)},
        '-',
        {'app': 'refdata', 'icon': 'icon-cog', 'label': 'Reference Data'},
        {'app': 'auth', 'icon': 'icon-lock', 'models': ('user', 'group')},
    ),
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse'
        }
    },
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s',
        },
        'simple': {
            'format': '%(levelname)s %(message)s',
        },
    },
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'filters': ['require_debug_false'],
            'class': 'django.utils.log.AdminEmailHandler'
        },
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
            'formatter': 'verbose',
        },
    },
    'loggers': {
        'django.request': {
            # 'handlers': ['mail_admins'],
            'handlers': ['console'],
            'level': 'DEBUG',
            'propagate': True,
        },
    }
}
